package mod.silverwolfs.silverwolfsbuildingblocks.init;

import mod.silverwolfs.silverwolfsbuildingblocks.SilverwolfsBuildingBlocks;
import mod.silverwolfs.silverwolfsbuildingblocks.object.blocks.*;
import net.minecraft.block.*;
import net.minecraft.block.material.Material;
import net.minecraft.item.*;
import net.minecraft.particles.ParticleTypes;
import net.minecraftforge.common.ToolType;
import net.minecraftforge.eventbus.api.IEventBus;
import net.minecraftforge.fml.RegistryObject;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.registries.ForgeRegistries;

import java.util.ArrayList;
import java.util.function.Function;
import java.util.function.Supplier;

public class BlockInit {

    public static final DeferredRegister<Block> BLOCKS = DeferredRegister.create(ForgeRegistries.BLOCKS, SilverwolfsBuildingBlocks.MOD_ID);

    public static void init(IEventBus modBus) {
        BLOCKS.register(modBus);

    }
    private static <T extends Block> RegistryObject<T> register(String name, Supplier<? extends T> sup) {
        return register(name, sup, BlockInit::itemDefault);
    }

    private static <T extends Block> RegistryObject<T> register(String name, Supplier<? extends T> sup, Function<RegistryObject<T>, Supplier<? extends Item>> itemCreator) {
        RegistryObject<T> ret = registerNoItem(name, sup);
        ItemInit.ITEMS.register(name, itemCreator.apply(ret));
        return ret;
    }

    private static <T extends Block> RegistryObject<T> registerNoItem(String name, Supplier<? extends T> sup) {
        return BLOCKS.register(name, sup);
    }

    private static Supplier<BlockItem> itemDefault(final RegistryObject<? extends Block> block) {
        return item(block, SilverwolfsBuildingBlocks.TAB);
    }

    private static Supplier<BlockItem> item(final RegistryObject<? extends Block> block, final ItemGroup itemGroup) {
        return () -> new BlockItem(block.get(), new Item.Properties().tab(itemGroup));
    }

    //Blocks
    public static final RegistryObject<Block> THATCH_BLOCK = BLOCKS.register("thatch_block", () -> new RotatedPillarBlock(AbstractBlock.Properties.of(Material.PLANT).sound(SoundType.WET_GRASS).strength(0.5F, 0.5F).harvestTool(ToolType.HOE)));
    public static final RegistryObject<Block> THATCH_BUTTON = BLOCKS.register("thatch_button", () -> new ModWoodButtonBlock(AbstractBlock.Properties.of(Material.PLANT).sound(SoundType.WET_GRASS).strength(0.5F, 0.5F).harvestTool(ToolType.HOE)));
    public static final RegistryObject<Block> THATCH_FENCE = BLOCKS.register("thatch_fence", () -> new FenceBlock(AbstractBlock.Properties.of(Material.PLANT).sound(SoundType.WET_GRASS).strength(0.5F,0.5F).harvestTool(ToolType.HOE)));
    public static final RegistryObject<Block> THATCH_FENCE_GATE = BLOCKS.register("thatch_fence_gate", () -> new FenceGateBlock(AbstractBlock.Properties.of(Material.PLANT).sound(SoundType.WET_GRASS).strength(0.5F,0.5F).harvestTool(ToolType.HOE)));
    public static final RegistryObject<Block> THATCH_DOOR = BLOCKS.register("thatch_door", () -> new ModDoors(AbstractBlock.Properties.of(Material.PLANT).sound(SoundType.WET_GRASS).strength(0.5F, 0.5F).harvestTool(ToolType.HOE).noOcclusion()));
    public static final RegistryObject<ModLadderBlock> THATCH_LADDER = BLOCKS.register("thatch_ladder", () -> new ModLadderBlock(AbstractBlock.Properties.copy(Blocks.LADDER).harvestTool(ToolType.HOE)));
    public static final RegistryObject<Block> THATCH_PRESSURE_PLATE = BLOCKS.register("thatch_pressure_plate", () -> new ModPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, AbstractBlock.Properties.of(Material.PLANT).sound(SoundType.WET_GRASS).strength(0.5F,0.5F).harvestTool(ToolType.HOE)));
    public static final RegistryObject<Block> THATCH_SLAB = BLOCKS.register("thatch_slab", () -> new SlabBlock(AbstractBlock.Properties.copy(BlockInit.THATCH_BLOCK.get())));
    public static final RegistryObject<Block> THATCH_STAIRS = BLOCKS.register("thatch_stairs", () -> new StairsBlock(() -> BlockInit.THATCH_BLOCK.get().defaultBlockState() , AbstractBlock.Properties.copy(BlockInit.THATCH_BLOCK.get())));
    public static final RegistryObject<Block> THATCH_TRAPDOOR = BLOCKS.register("thatch_trapdoor", () -> new TrapDoorBlock(AbstractBlock.Properties.of(Material.PLANT).sound(SoundType.WET_GRASS).strength(0.5F,0.5F).noOcclusion()));

    public static final RegistryObject<Block> BAMBOO_BLOCK = BLOCKS.register("bamboo_block", () -> new RotatedPillarBlock(AbstractBlock.Properties.of(Material.BAMBOO).sound(SoundType.BAMBOO_SAPLING).strength(0.5F, 0.5F)));
    public static final RegistryObject<Block> BAMBOO_BUTTON = BLOCKS.register("bamboo_button", () -> new ModWoodButtonBlock(AbstractBlock.Properties.of(Material.BAMBOO).sound(SoundType.BAMBOO).strength(0.5F, 0.5F)));
    public static final RegistryObject<Block> BAMBOO_DOOR = BLOCKS.register("bamboo_door", () -> new ModDoors(AbstractBlock.Properties.of(Material.BAMBOO).sound(SoundType.BAMBOO_SAPLING).strength(0.5F, 0.5F).noOcclusion()));
    public static final RegistryObject<Block> BAMBOO_FENCE = BLOCKS.register("bamboo_fence", () -> new FenceBlock(AbstractBlock.Properties.of(Material.BAMBOO).sound(SoundType.BAMBOO_SAPLING).strength(0.5F,0.5F)));
    public static final RegistryObject<Block> BAMBOO_FENCE_GATE = BLOCKS.register("bamboo_fence_gate", () -> new FenceGateBlock(AbstractBlock.Properties.of(Material.BAMBOO).sound(SoundType.BAMBOO_SAPLING).strength(0.5F,0.5F)));
    public static final RegistryObject<ModLadderBlock> BAMBOO_LADDER = BLOCKS.register("bamboo_ladder", () -> new ModLadderBlock(AbstractBlock.Properties.copy(Blocks.LADDER)));
    public static final RegistryObject<Block> BAMBOO_PRESSURE_PLATE = BLOCKS.register("bamboo_pressure_plate", () -> new ModPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, AbstractBlock.Properties.of(Material.BAMBOO).sound(SoundType.BAMBOO).strength(0.5F,0.5F)));
    public static final RegistryObject<Block> BAMBOO_SLAB = BLOCKS.register("bamboo_slab", () -> new SlabBlock(AbstractBlock.Properties.copy(BlockInit.BAMBOO_BLOCK.get())));
    public static final RegistryObject<Block> BAMBOO_STAIRS = BLOCKS.register("bamboo_stairs", () -> new StairsBlock(() -> BlockInit.BAMBOO_BLOCK.get().defaultBlockState() , AbstractBlock.Properties.copy(BlockInit.BAMBOO_BLOCK.get())));
    public static final RegistryObject<Block> BAMBOO_TRAPDOOR = BLOCKS.register("bamboo_trapdoor", () -> new TrapDoorBlock(AbstractBlock.Properties.of(Material.BAMBOO).sound(SoundType.BAMBOO_SAPLING).strength(0.5F,0.5F).noOcclusion()));

    public static final RegistryObject<Block> ACACIA_BEAM_UP = BLOCKS.register("acacia_beam_up", () -> new Block(AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE)));
    public static final RegistryObject<Block> ACACIA_BEAM_MIDDLE = BLOCKS.register("acacia_beam_middle", () -> new Block(AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE)));
    public static final RegistryObject<Block> ACACIA_BEAM_DOWN = BLOCKS.register("acacia_beam_down", () -> new Block(AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE)));
    public static final RegistryObject<Block> BIRCH_BEAM_UP = BLOCKS.register("birch_beam_up", () -> new Block(AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE)));
    public static final RegistryObject<Block> BIRCH_BEAM_MIDDLE = BLOCKS.register("birch_beam_middle", () -> new Block(AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE)));
    public static final RegistryObject<Block> BIRCH_BEAM_DOWN = BLOCKS.register("birch_beam_down", () -> new Block(AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE)));
    public static final RegistryObject<Block> OAK_BEAM_UP = BLOCKS.register("oak_beam_up", () -> new Block(AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE)));
    public static final RegistryObject<Block> OAK_BEAM_MIDDLE = BLOCKS.register("oak_beam_middle", () -> new Block(AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE)));
    public static final RegistryObject<Block> OAK_BEAM_DOWN = BLOCKS.register("oak_beam_down", () -> new Block(AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE)));
    public static final RegistryObject<Block> JUNGLE_BEAM_UP = BLOCKS.register("jungle_beam_up", () -> new Block(AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE)));
    public static final RegistryObject<Block> JUNGLE_BEAM_MIDDLE = BLOCKS.register("jungle_beam_middle", () -> new Block(AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE)));
    public static final RegistryObject<Block> JUNGLE_BEAM_DOWN = BLOCKS.register("jungle_beam_down", () -> new Block(AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE)));
    public static final RegistryObject<Block> SPRUCE_BEAM_UP = BLOCKS.register("spruce_beam_up", () -> new Block(AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE)));
    public static final RegistryObject<Block> SPRUCE_BEAM_MIDDLE = BLOCKS.register("spruce_beam_middle", () -> new Block(AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE)));
    public static final RegistryObject<Block> SPRUCE_BEAM_DOWN = BLOCKS.register("spruce_beam_down", () -> new Block(AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE)));
    public static final RegistryObject<Block> DARK_OAK_BEAM_UP = BLOCKS.register("dark_oak_beam_up", () -> new Block(AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE)));
    public static final RegistryObject<Block> DARK_OAK_BEAM_MIDDLE = BLOCKS.register("dark_oak_beam_middle", () -> new Block(AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE)));
    public static final RegistryObject<Block> DARK_OAK_BEAM_DOWN = BLOCKS.register("dark_oak_beam_down", () -> new Block(AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE)));

    public static final RegistryObject<ModLadderBlock> ACACIA_LADDER = BLOCKS.register("acacia_ladder", () -> new ModLadderBlock(AbstractBlock.Properties.copy(Blocks.LADDER).harvestTool(ToolType.AXE)));
    public static final RegistryObject<ModLadderBlock> BIRCH_LADDER = BLOCKS.register("birch_ladder", () -> new ModLadderBlock(AbstractBlock.Properties.copy(Blocks.LADDER).harvestTool(ToolType.AXE)));
    public static final RegistryObject<ModLadderBlock> DARK_OAK_LADDER = BLOCKS.register("dark_oak_ladder", () -> new ModLadderBlock(AbstractBlock.Properties.copy(Blocks.LADDER).harvestTool(ToolType.AXE)));
    public static final RegistryObject<ModLadderBlock> JUNGLE_LADDER = BLOCKS.register("jungle_ladder", () -> new ModLadderBlock(AbstractBlock.Properties.copy(Blocks.LADDER).harvestTool(ToolType.AXE)));
    public static final RegistryObject<ModLadderBlock> OAK_LADDER = BLOCKS.register("oak_ladder", () -> new ModLadderBlock(AbstractBlock.Properties.copy(Blocks.LADDER).harvestTool(ToolType.AXE)));
    public static final RegistryObject<ModLadderBlock> SPRUCE_LADDER = BLOCKS.register("spruce_ladder", () -> new ModLadderBlock(AbstractBlock.Properties.copy(Blocks.LADDER).harvestTool(ToolType.AXE)));

    public static final RegistryObject<Block> MOSSY_STONE = BLOCKS.register("mossy_stone", () -> new Block(AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(1.5F, 6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> MOSSY_STONE_BUTTON = BLOCKS.register("mossy_stone_button", () -> new ModStoneButtonBlock(AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(1.5F, 6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> MOSSY_STONE_WALL = BLOCKS.register("mossy_stone_wall", () -> new WallBlock(AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(1.5F,6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> MOSSY_STONE_PRESSURE_PLATE = BLOCKS.register("mossy_stone_pressure_plate", () -> new ModPressurePlateBlock(PressurePlateBlock.Sensitivity.MOBS, AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(1.5F,6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> MOSSY_STONE_SLAB = BLOCKS.register("mossy_stone_slab", () -> new SlabBlock(AbstractBlock.Properties.copy(BlockInit.MOSSY_STONE.get())));
    public static final RegistryObject<Block> MOSSY_STONE_STAIRS = BLOCKS.register("mossy_stone_stairs", () -> new StairsBlock(() -> BlockInit.MOSSY_STONE.get().defaultBlockState() , AbstractBlock.Properties.copy(BlockInit.MOSSY_STONE.get())));

    public static final RegistryObject<Block> MORE_MOSSY_STONE = BLOCKS.register("more_mossy_stone", () -> new Block(AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(1.5F, 6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> MORE_MOSSY_STONE_BUTTON = BLOCKS.register("more_mossy_stone_button", () -> new ModStoneButtonBlock(AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(1.5F, 6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> MORE_MOSSY_STONE_WALL = BLOCKS.register("more_mossy_stone_wall", () -> new WallBlock(AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(1.5F,6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> MORE_MOSSY_STONE_PRESSURE_PLATE = BLOCKS.register("more_mossy_stone_pressure_plate", () -> new ModPressurePlateBlock(PressurePlateBlock.Sensitivity.MOBS, AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(1.5F,6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> MORE_MOSSY_STONE_SLAB = BLOCKS.register("more_mossy_stone_slab", () -> new SlabBlock(AbstractBlock.Properties.copy(BlockInit.MORE_MOSSY_STONE.get())));
    public static final RegistryObject<Block> MORE_MOSSY_STONE_STAIRS = BLOCKS.register("more_mossy_stone_stairs", () -> new StairsBlock(() -> BlockInit.MORE_MOSSY_STONE.get().defaultBlockState() , AbstractBlock.Properties.copy(BlockInit.MORE_MOSSY_STONE.get())));

    public static final RegistryObject<Block> MOSSY_ANDESITE = BLOCKS.register("mossy_andesite", () -> new Block(AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(1.5F, 6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> MOSSY_ANDESITE_BUTTON = BLOCKS.register("mossy_andesite_button", () -> new ModStoneButtonBlock(AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(1.5F, 6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> MOSSY_ANDESITE_WALL = BLOCKS.register("mossy_andesite_wall", () -> new WallBlock(AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(1.5F,6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> MOSSY_ANDESITE_PRESSURE_PLATE = BLOCKS.register("mossy_andesite_pressure_plate", () -> new ModPressurePlateBlock(PressurePlateBlock.Sensitivity.MOBS, AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(1.5F,6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> MOSSY_ANDESITE_SLAB = BLOCKS.register("mossy_andesite_slab", () -> new SlabBlock(AbstractBlock.Properties.copy(BlockInit.MOSSY_ANDESITE.get())));
    public static final RegistryObject<Block> MOSSY_ANDESITE_STAIRS = BLOCKS.register("mossy_andesite_stairs", () -> new StairsBlock(() -> BlockInit.MOSSY_ANDESITE.get().defaultBlockState() , AbstractBlock.Properties.copy(BlockInit.MOSSY_ANDESITE.get())));

    public static final RegistryObject<Block> MORE_MOSSY_ANDESITE = BLOCKS.register("more_mossy_andesite", () -> new Block(AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(1.5F, 6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> MORE_MOSSY_ANDESITE_BUTTON = BLOCKS.register("more_mossy_andesite_button", () -> new ModStoneButtonBlock(AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(1.5F, 6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> MORE_MOSSY_ANDESITE_WALL = BLOCKS.register("more_mossy_andesite_wall", () -> new WallBlock(AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(1.5F,6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> MORE_MOSSY_ANDESITE_PRESSURE_PLATE = BLOCKS.register("more_mossy_andesite_pressure_plate", () -> new ModPressurePlateBlock(PressurePlateBlock.Sensitivity.MOBS, AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(1.5F,6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops()));
    public static final RegistryObject<Block> MORE_MOSSY_ANDESITE_SLAB = BLOCKS.register("more_mossy_andesite_slab", () -> new SlabBlock(AbstractBlock.Properties.copy(BlockInit.MORE_MOSSY_ANDESITE.get())));
    public static final RegistryObject<Block> MORE_MOSSY_ANDESITE_STAIRS = BLOCKS.register("more_mossy_andesite_stairs", () -> new StairsBlock(() -> BlockInit.MORE_MOSSY_ANDESITE.get().defaultBlockState() , AbstractBlock.Properties.copy(BlockInit.MORE_MOSSY_ANDESITE.get())));

    public static final RegistryObject<TorchBlock> ACACIA_TORCH = BLOCKS.register("acacia_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> ACACIA_WALL_TORCH = BLOCKS.register("acacia_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(ACACIA_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> BIRCH_TORCH = BLOCKS.register("birch_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> BIRCH_WALL_TORCH = BLOCKS.register("birch_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(BIRCH_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> DARK_OAK_TORCH = BLOCKS.register("dark_oak_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> DARK_OAK_WALL_TORCH = BLOCKS.register("dark_oak_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(DARK_OAK_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> JUNGLE_TORCH = BLOCKS.register("jungle_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> JUNGLE_WALL_TORCH = BLOCKS.register("jungle_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(JUNGLE_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> OAK_TORCH = BLOCKS.register("oak_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> OAK_WALL_TORCH = BLOCKS.register("oak_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(OAK_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> SPRUCE_TORCH = BLOCKS.register("spruce_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> SPRUCE_WALL_TORCH = BLOCKS.register("spruce_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(SPRUCE_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));

    public static final RegistryObject<TorchBlock> ACACIA_SOUL_TORCH = BLOCKS.register("acacia_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> ACACIA_SOUL_WALL_TORCH = BLOCKS.register("acacia_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(ACACIA_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> BIRCH_SOUL_TORCH = BLOCKS.register("birch_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> BIRCH_SOUL_WALL_TORCH = BLOCKS.register("birch_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(BIRCH_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> DARK_OAK_SOUL_TORCH = BLOCKS.register("dark_oak_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> DARK_OAK_SOUL_WALL_TORCH = BLOCKS.register("dark_oak_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(DARK_OAK_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> JUNGLE_SOUL_TORCH = BLOCKS.register("jungle_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> JUNGLE_SOUL_WALL_TORCH = BLOCKS.register("jungle_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(JUNGLE_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> OAK_SOUL_TORCH = BLOCKS.register("oak_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> OAK_SOUL_WALL_TORCH = BLOCKS.register("oak_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(OAK_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> SPRUCE_SOUL_TORCH = BLOCKS.register("spruce_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> SPRUCE_SOUL_WALL_TORCH = BLOCKS.register("spruce_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(SPRUCE_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));

    public static final RegistryObject<TorchBlock> BLACK_LIGHT_TORCH = BLOCKS.register("black_light_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> BLUE_LIGHT_TORCH = BLOCKS.register("blue_light_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> BROWN_LIGHT_TORCH = BLOCKS.register("brown_light_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> CYAN_LIGHT_TORCH = BLOCKS.register("cyan_light_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> GRAY_LIGHT_TORCH = BLOCKS.register("gray_light_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> GREEN_LIGHT_TORCH = BLOCKS.register("green_light_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> LIGHT_BLUE_LIGHT_TORCH = BLOCKS.register("light_blue_light_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> LIGHT_GRAY_LIGHT_TORCH = BLOCKS.register("light_gray_light_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> LIME_LIGHT_TORCH = BLOCKS.register("lime_light_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> MAGENTA_LIGHT_TORCH = BLOCKS.register("magenta_light_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> ORANGE_LIGHT_TORCH = BLOCKS.register("orange_light_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> PINK_LIGHT_TORCH = BLOCKS.register("pink_light_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> PURPLE_LIGHT_TORCH = BLOCKS.register("purple_light_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> RED_LIGHT_TORCH = BLOCKS.register("red_light_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> WHITE_LIGHT_TORCH = BLOCKS.register("white_light_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> YELLOW_LIGHT_TORCH = BLOCKS.register("yellow_light_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> BLACK_MEDIUM_TORCH = BLOCKS.register("black_medium_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> BLUE_MEDIUM_TORCH = BLOCKS.register("blue_medium_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> BROWN_MEDIUM_TORCH = BLOCKS.register("brown_medium_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> CYAN_MEDIUM_TORCH = BLOCKS.register("cyan_medium_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> GRAY_MEDIUM_TORCH = BLOCKS.register("gray_medium_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> GREEN_MEDIUM_TORCH = BLOCKS.register("green_medium_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> LIGHT_BLUE_MEDIUM_TORCH = BLOCKS.register("light_blue_medium_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> LIGHT_GRAY_MEDIUM_TORCH = BLOCKS.register("light_gray_medium_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> LIME_MEDIUM_TORCH = BLOCKS.register("lime_medium_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> MAGENTA_MEDIUM_TORCH = BLOCKS.register("magenta_medium_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> ORANGE_MEDIUM_TORCH = BLOCKS.register("orange_medium_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> PINK_MEDIUM_TORCH = BLOCKS.register("pink_medium_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> PURPLE_MEDIUM_TORCH = BLOCKS.register("purple_medium_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> RED_MEDIUM_TORCH = BLOCKS.register("red_medium_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> WHITE_MEDIUM_TORCH = BLOCKS.register("white_medium_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> YELLOW_MEDIUM_TORCH = BLOCKS.register("yellow_medium_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> BLACK_DARK_TORCH = BLOCKS.register("black_dark_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> BLUE_DARK_TORCH = BLOCKS.register("blue_dark_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> BROWN_DARK_TORCH = BLOCKS.register("brown_dark_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> CYAN_DARK_TORCH = BLOCKS.register("cyan_dark_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> GRAY_DARK_TORCH = BLOCKS.register("gray_dark_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> GREEN_DARK_TORCH = BLOCKS.register("green_dark_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> LIGHT_BLUE_DARK_TORCH = BLOCKS.register("light_blue_dark_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> LIGHT_GRAY_DARK_TORCH = BLOCKS.register("light_gray_dark_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> LIME_DARK_TORCH = BLOCKS.register("lime_dark_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> MAGENTA_DARK_TORCH = BLOCKS.register("magenta_dark_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> ORANGE_DARK_TORCH = BLOCKS.register("orange_dark_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> PINK_DARK_TORCH = BLOCKS.register("pink_dark_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> PURPLE_DARK_TORCH = BLOCKS.register("purple_dark_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> RED_DARK_TORCH = BLOCKS.register("red_dark_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> WHITE_DARK_TORCH = BLOCKS.register("white_dark_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> YELLOW_DARK_TORCH = BLOCKS.register("yellow_dark_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<TorchBlock> BLACK_LIGHT_SOUL_TORCH = BLOCKS.register("black_light_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> BLUE_LIGHT_SOUL_TORCH = BLOCKS.register("blue_light_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> BROWN_LIGHT_SOUL_TORCH = BLOCKS.register("brown_light_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> CYAN_LIGHT_SOUL_TORCH = BLOCKS.register("cyan_light_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> GRAY_LIGHT_SOUL_TORCH = BLOCKS.register("gray_light_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> GREEN_LIGHT_SOUL_TORCH = BLOCKS.register("green_light_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> LIGHT_BLUE_LIGHT_SOUL_TORCH = BLOCKS.register("light_blue_light_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> LIGHT_GRAY_LIGHT_SOUL_TORCH = BLOCKS.register("light_gray_light_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> LIME_LIGHT_SOUL_TORCH = BLOCKS.register("lime_light_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> MAGENTA_LIGHT_SOUL_TORCH = BLOCKS.register("magenta_light_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> ORANGE_LIGHT_SOUL_TORCH = BLOCKS.register("orange_light_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> PINK_LIGHT_SOUL_TORCH = BLOCKS.register("pink_light_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> PURPLE_LIGHT_SOUL_TORCH = BLOCKS.register("purple_light_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> RED_LIGHT_SOUL_TORCH = BLOCKS.register("red_light_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> WHITE_LIGHT_SOUL_TORCH = BLOCKS.register("white_light_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> YELLOW_LIGHT_SOUL_TORCH = BLOCKS.register("yellow_light_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> BLACK_MEDIUM_SOUL_TORCH = BLOCKS.register("black_medium_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> BLUE_MEDIUM_SOUL_TORCH = BLOCKS.register("blue_medium_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> BROWN_MEDIUM_SOUL_TORCH = BLOCKS.register("brown_medium_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> CYAN_MEDIUM_SOUL_TORCH = BLOCKS.register("cyan_medium_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> GRAY_MEDIUM_SOUL_TORCH = BLOCKS.register("gray_medium_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> GREEN_MEDIUM_SOUL_TORCH = BLOCKS.register("green_medium_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> LIGHT_BLUE_MEDIUM_SOUL_TORCH = BLOCKS.register("light_blue_medium_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> LIGHT_GRAY_MEDIUM_SOUL_TORCH = BLOCKS.register("light_gray_medium_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> LIME_MEDIUM_SOUL_TORCH = BLOCKS.register("lime_medium_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> MAGENTA_MEDIUM_SOUL_TORCH = BLOCKS.register("magenta_medium_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> ORANGE_MEDIUM_SOUL_TORCH = BLOCKS.register("orange_medium_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> PINK_MEDIUM_SOUL_TORCH = BLOCKS.register("pink_medium_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> PURPLE_MEDIUM_SOUL_TORCH = BLOCKS.register("purple_medium_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> RED_MEDIUM_SOUL_TORCH = BLOCKS.register("red_medium_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> WHITE_MEDIUM_SOUL_TORCH = BLOCKS.register("white_medium_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> YELLOW_MEDIUM_SOUL_TORCH = BLOCKS.register("yellow_medium_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> BLACK_DARK_SOUL_TORCH = BLOCKS.register("black_dark_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> BLUE_DARK_SOUL_TORCH = BLOCKS.register("blue_dark_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> BROWN_DARK_SOUL_TORCH = BLOCKS.register("brown_dark_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> CYAN_DARK_SOUL_TORCH = BLOCKS.register("cyan_dark_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> GRAY_DARK_SOUL_TORCH = BLOCKS.register("gray_dark_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> GREEN_DARK_SOUL_TORCH = BLOCKS.register("green_dark_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> LIGHT_BLUE_DARK_SOUL_TORCH = BLOCKS.register("light_blue_dark_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> LIGHT_GRAY_DARK_SOUL_TORCH = BLOCKS.register("light_gray_dark_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> LIME_DARK_SOUL_TORCH = BLOCKS.register("lime_dark_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> MAGENTA_DARK_SOUL_TORCH = BLOCKS.register("magenta_dark_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> ORANGE_DARK_SOUL_TORCH = BLOCKS.register("orange_dark_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> PINK_DARK_SOUL_TORCH = BLOCKS.register("pink_dark_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> PURPLE_DARK_SOUL_TORCH = BLOCKS.register("purple_dark_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> RED_DARK_SOUL_TORCH = BLOCKS.register("red_dark_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> WHITE_DARK_SOUL_TORCH = BLOCKS.register("white_dark_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<TorchBlock> YELLOW_DARK_SOUL_TORCH = BLOCKS.register("yellow_dark_soul_torch", () -> new TorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));

    public static final RegistryObject<WallTorchBlock> BLACK_LIGHT_WALL_TORCH = BLOCKS.register("black_light_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(BLACK_LIGHT_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> BLUE_LIGHT_WALL_TORCH = BLOCKS.register("blue_light_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(BLUE_LIGHT_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> BROWN_LIGHT_WALL_TORCH = BLOCKS.register("brown_light_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(BROWN_LIGHT_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> CYAN_LIGHT_WALL_TORCH = BLOCKS.register("cyan_light_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(CYAN_LIGHT_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> GRAY_LIGHT_WALL_TORCH = BLOCKS.register("gray_light_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(GRAY_LIGHT_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> GREEN_LIGHT_WALL_TORCH = BLOCKS.register("green_light_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(GREEN_LIGHT_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> LIGHT_BLUE_LIGHT_WALL_TORCH = BLOCKS.register("light_blue_light_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(LIGHT_BLUE_LIGHT_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> LIGHT_GRAY_LIGHT_WALL_TORCH = BLOCKS.register("light_gray_light_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(LIGHT_GRAY_LIGHT_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> LIME_LIGHT_WALL_TORCH = BLOCKS.register("lime_light_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(LIME_LIGHT_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> MAGENTA_LIGHT_WALL_TORCH = BLOCKS.register("magenta_light_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(MAGENTA_LIGHT_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> ORANGE_LIGHT_WALL_TORCH = BLOCKS.register("orange_light_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(ORANGE_LIGHT_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> PINK_LIGHT_WALL_TORCH = BLOCKS.register("pink_light_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(PINK_LIGHT_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> PURPLE_LIGHT_WALL_TORCH = BLOCKS.register("purple_light_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(PURPLE_LIGHT_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> RED_LIGHT_WALL_TORCH = BLOCKS.register("red_light_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(RED_LIGHT_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> WHITE_LIGHT_WALL_TORCH = BLOCKS.register("white_light_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(WHITE_LIGHT_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> YELLOW_LIGHT_WALL_TORCH = BLOCKS.register("yellow_light_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(YELLOW_LIGHT_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> BLACK_MEDIUM_WALL_TORCH = BLOCKS.register("black_medium_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(BLACK_MEDIUM_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> BLUE_MEDIUM_WALL_TORCH = BLOCKS.register("blue_medium_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(BLUE_MEDIUM_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> BROWN_MEDIUM_WALL_TORCH = BLOCKS.register("brown_medium_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(BROWN_MEDIUM_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> CYAN_MEDIUM_WALL_TORCH = BLOCKS.register("cyan_medium_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(CYAN_MEDIUM_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> GRAY_MEDIUM_WALL_TORCH = BLOCKS.register("gray_medium_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(GRAY_MEDIUM_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> GREEN_MEDIUM_WALL_TORCH = BLOCKS.register("green_medium_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(GREEN_MEDIUM_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> LIGHT_BLUE_MEDIUM_WALL_TORCH = BLOCKS.register("light_blue_medium_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(LIGHT_BLUE_MEDIUM_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> LIGHT_GRAY_MEDIUM_WALL_TORCH = BLOCKS.register("light_gray_medium_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(LIGHT_GRAY_MEDIUM_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> LIME_MEDIUM_WALL_TORCH = BLOCKS.register("lime_medium_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(LIME_MEDIUM_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> MAGENTA_MEDIUM_WALL_TORCH = BLOCKS.register("magenta_medium_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(MAGENTA_MEDIUM_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> ORANGE_MEDIUM_WALL_TORCH = BLOCKS.register("orange_medium_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(ORANGE_MEDIUM_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> PINK_MEDIUM_WALL_TORCH = BLOCKS.register("pink_medium_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(PINK_MEDIUM_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> PURPLE_MEDIUM_WALL_TORCH = BLOCKS.register("purple_medium_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(PURPLE_MEDIUM_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> RED_MEDIUM_WALL_TORCH = BLOCKS.register("red_medium_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(RED_MEDIUM_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> WHITE_MEDIUM_WALL_TORCH = BLOCKS.register("white_medium_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(WHITE_MEDIUM_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> YELLOW_MEDIUM_WALL_TORCH = BLOCKS.register("yellow_medium_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(YELLOW_MEDIUM_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> BLACK_DARK_WALL_TORCH = BLOCKS.register("black_dark_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(BLACK_DARK_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> BLUE_DARK_WALL_TORCH = BLOCKS.register("blue_dark_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(BLUE_DARK_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> BROWN_DARK_WALL_TORCH = BLOCKS.register("brown_dark_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(BROWN_DARK_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> CYAN_DARK_WALL_TORCH = BLOCKS.register("cyan_dark_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(CYAN_DARK_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> GRAY_DARK_WALL_TORCH = BLOCKS.register("gray_dark_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(GRAY_DARK_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> GREEN_DARK_WALL_TORCH = BLOCKS.register("green_dark_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(GREEN_DARK_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> LIGHT_BLUE_DARK_WALL_TORCH = BLOCKS.register("light_blue_dark_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(LIGHT_BLUE_DARK_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> LIGHT_GRAY_DARK_WALL_TORCH = BLOCKS.register("light_gray_dark_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(LIGHT_GRAY_DARK_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> LIME_DARK_WALL_TORCH = BLOCKS.register("lime_dark_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(LIME_DARK_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> MAGENTA_DARK_WALL_TORCH = BLOCKS.register("magenta_dark_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(MAGENTA_DARK_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> ORANGE_DARK_WALL_TORCH = BLOCKS.register("orange_dark_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(ORANGE_DARK_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> PINK_DARK_WALL_TORCH = BLOCKS.register("pink_dark_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(PINK_DARK_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> PURPLE_DARK_WALL_TORCH = BLOCKS.register("purple_dark_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(PURPLE_DARK_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> RED_DARK_WALL_TORCH = BLOCKS.register("red_dark_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(RED_DARK_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> WHITE_DARK_WALL_TORCH = BLOCKS.register("white_dark_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(WHITE_DARK_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> YELLOW_DARK_WALL_TORCH = BLOCKS.register("yellow_dark_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(YELLOW_DARK_TORCH.get()).lightLevel((state) -> 14), ParticleTypes.FLAME));
    public static final RegistryObject<WallTorchBlock> BLACK_LIGHT_SOUL_WALL_TORCH = BLOCKS.register("black_light_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(BLACK_LIGHT_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> BLUE_LIGHT_SOUL_WALL_TORCH = BLOCKS.register("blue_light_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(BLUE_LIGHT_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> BROWN_LIGHT_SOUL_WALL_TORCH = BLOCKS.register("brown_light_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(BROWN_LIGHT_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> CYAN_LIGHT_SOUL_WALL_TORCH = BLOCKS.register("cyan_light_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(CYAN_LIGHT_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> GRAY_LIGHT_SOUL_WALL_TORCH = BLOCKS.register("gray_light_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(GRAY_LIGHT_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> GREEN_LIGHT_SOUL_WALL_TORCH = BLOCKS.register("green_light_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(GREEN_LIGHT_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> LIGHT_BLUE_LIGHT_SOUL_WALL_TORCH = BLOCKS.register("light_blue_light_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(LIGHT_BLUE_LIGHT_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> LIGHT_GRAY_LIGHT_SOUL_WALL_TORCH = BLOCKS.register("light_gray_light_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(LIGHT_GRAY_LIGHT_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> LIME_LIGHT_SOUL_WALL_TORCH = BLOCKS.register("lime_light_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(LIME_LIGHT_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> MAGENTA_LIGHT_SOUL_WALL_TORCH = BLOCKS.register("magenta_light_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(MAGENTA_LIGHT_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> ORANGE_LIGHT_SOUL_WALL_TORCH = BLOCKS.register("orange_light_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(ORANGE_LIGHT_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> PINK_LIGHT_SOUL_WALL_TORCH = BLOCKS.register("pink_light_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(PINK_LIGHT_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> PURPLE_LIGHT_SOUL_WALL_TORCH = BLOCKS.register("purple_light_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(PURPLE_LIGHT_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> RED_LIGHT_SOUL_WALL_TORCH = BLOCKS.register("red_light_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(RED_LIGHT_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> WHITE_LIGHT_SOUL_WALL_TORCH = BLOCKS.register("white_light_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(WHITE_LIGHT_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> YELLOW_LIGHT_SOUL_WALL_TORCH = BLOCKS.register("yellow_light_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(YELLOW_LIGHT_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> BLACK_MEDIUM_SOUL_WALL_TORCH = BLOCKS.register("black_medium_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(BLACK_MEDIUM_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> BLUE_MEDIUM_SOUL_WALL_TORCH = BLOCKS.register("blue_medium_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(BLUE_MEDIUM_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> BROWN_MEDIUM_SOUL_WALL_TORCH = BLOCKS.register("brown_medium_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(BROWN_MEDIUM_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> CYAN_MEDIUM_SOUL_WALL_TORCH = BLOCKS.register("cyan_medium_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(CYAN_MEDIUM_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> GRAY_MEDIUM_SOUL_WALL_TORCH = BLOCKS.register("gray_medium_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(GRAY_MEDIUM_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> GREEN_MEDIUM_SOUL_WALL_TORCH = BLOCKS.register("green_medium_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(GREEN_MEDIUM_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> LIGHT_BLUE_MEDIUM_SOUL_WALL_TORCH = BLOCKS.register("light_blue_medium_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(LIGHT_BLUE_MEDIUM_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> LIGHT_GRAY_MEDIUM_SOUL_WALL_TORCH = BLOCKS.register("light_gray_medium_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(LIGHT_GRAY_MEDIUM_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> LIME_MEDIUM_SOUL_WALL_TORCH = BLOCKS.register("lime_medium_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(LIME_MEDIUM_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> MAGENTA_MEDIUM_SOUL_WALL_TORCH = BLOCKS.register("magenta_medium_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(MAGENTA_MEDIUM_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> ORANGE_MEDIUM_SOUL_WALL_TORCH = BLOCKS.register("orange_medium_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(ORANGE_MEDIUM_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> PINK_MEDIUM_SOUL_WALL_TORCH = BLOCKS.register("pink_medium_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(PINK_MEDIUM_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> PURPLE_MEDIUM_SOUL_WALL_TORCH = BLOCKS.register("purple_medium_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(PURPLE_MEDIUM_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> RED_MEDIUM_SOUL_WALL_TORCH = BLOCKS.register("red_medium_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(RED_MEDIUM_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> WHITE_MEDIUM_SOUL_WALL_TORCH = BLOCKS.register("white_medium_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(WHITE_MEDIUM_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> YELLOW_MEDIUM_SOUL_WALL_TORCH = BLOCKS.register("yellow_medium_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(YELLOW_MEDIUM_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> BLACK_DARK_SOUL_WALL_TORCH = BLOCKS.register("black_dark_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(BLACK_DARK_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> BLUE_DARK_SOUL_WALL_TORCH = BLOCKS.register("blue_dark_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(BLUE_DARK_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> BROWN_DARK_SOUL_WALL_TORCH = BLOCKS.register("brown_dark_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(BROWN_DARK_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> CYAN_DARK_SOUL_WALL_TORCH = BLOCKS.register("cyan_dark_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(CYAN_DARK_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> GRAY_DARK_SOUL_WALL_TORCH = BLOCKS.register("gray_dark_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(GRAY_DARK_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> GREEN_DARK_SOUL_WALL_TORCH = BLOCKS.register("green_dark_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(GREEN_DARK_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> LIGHT_BLUE_DARK_SOUL_WALL_TORCH = BLOCKS.register("light_blue_dark_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(LIGHT_BLUE_DARK_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> LIGHT_GRAY_DARK_SOUL_WALL_TORCH = BLOCKS.register("light_gray_dark_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(LIGHT_GRAY_DARK_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> LIME_DARK_SOUL_WALL_TORCH = BLOCKS.register("lime_dark_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(LIME_DARK_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> MAGENTA_DARK_SOUL_WALL_TORCH = BLOCKS.register("magenta_dark_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(MAGENTA_DARK_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> ORANGE_DARK_SOUL_WALL_TORCH = BLOCKS.register("orange_dark_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(ORANGE_DARK_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> PINK_DARK_SOUL_WALL_TORCH = BLOCKS.register("pink_dark_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(PINK_DARK_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> PURPLE_DARK_SOUL_WALL_TORCH = BLOCKS.register("purple_dark_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(PURPLE_DARK_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> RED_DARK_SOUL_WALL_TORCH = BLOCKS.register("red_dark_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(RED_DARK_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> WHITE_DARK_SOUL_WALL_TORCH = BLOCKS.register("white_dark_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(WHITE_DARK_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));
    public static final RegistryObject<WallTorchBlock> YELLOW_DARK_SOUL_WALL_TORCH = BLOCKS.register("yellow_dark_soul_wall_torch", () -> new WallTorchBlock(AbstractBlock.Properties.of(Material.DECORATION).sound(SoundType.WOOD).noCollission().instabreak().dropsLike(YELLOW_DARK_SOUL_TORCH.get()).lightLevel((state) -> 10), ParticleTypes.SOUL_FIRE_FLAME));

    //block items
    public static final RegistryObject<BlockItem> THATCH_BLOCK_ITEM = ItemInit.ITEMS.register("thatch_block", () -> new BlockItem(THATCH_BLOCK.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> THATCH_BUTTON_ITEM = ItemInit.ITEMS.register("thatch_button", () -> new BlockItem(THATCH_BUTTON.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> THATCH_FENCE_ITEM = ItemInit.ITEMS.register("thatch_fence", () -> new BlockItem(THATCH_FENCE.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> THATCH_FENCE_GATE_ITEM = ItemInit.ITEMS.register("thatch_fence_gate", () -> new BlockItem(THATCH_FENCE_GATE.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> THATCH_DOOR_ITEM = ItemInit.ITEMS.register("thatch_door", () -> new BlockItem(THATCH_DOOR.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> THATCH_LADDER_ITEM = ItemInit.ITEMS.register("thatch_ladder", () -> new BlockItem(THATCH_LADDER.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> THATCH_PRESSURE_PLATE_ITEM = ItemInit.ITEMS.register("thatch_pressure_plate", () -> new BlockItem(THATCH_PRESSURE_PLATE.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> THATCH_SLAB_ITEM = ItemInit.ITEMS.register("thatch_slab", () -> new BlockItem(THATCH_SLAB.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> THATCH_STAIRS_ITEM = ItemInit.ITEMS.register("thatch_stairs", () -> new BlockItem(THATCH_STAIRS.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> THATCH_TRAPDOOR_ITEM = ItemInit.ITEMS.register("thatch_trapdoor", () -> new BlockItem(THATCH_TRAPDOOR.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));

    public static final RegistryObject<BlockItem> BAMBOO_BLOCK_ITEM = ItemInit.ITEMS.register("bamboo_block", () -> new BlockItem(BAMBOO_BLOCK.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> BAMBOO_BUTTON_ITEM = ItemInit.ITEMS.register("bamboo_button", () -> new BlockItem(BAMBOO_BUTTON.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> BAMBOO_FENCE_ITEM = ItemInit.ITEMS.register("bamboo_fence", () -> new BlockItem(BAMBOO_FENCE.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> BAMBOO_FENCE_GATE_ITEM = ItemInit.ITEMS.register("bamboo_fence_gate", () -> new BlockItem(BAMBOO_FENCE_GATE.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> BAMBOO_DOOR_ITEM = ItemInit.ITEMS.register("bamboo_door", () -> new BlockItem(BAMBOO_DOOR.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> BAMBOO_LADDER_ITEM = ItemInit.ITEMS.register("bamboo_ladder", () -> new BlockItem(BAMBOO_LADDER.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> BAMBOO_PRESSURE_PLATE_ITEM = ItemInit.ITEMS.register("bamboo_pressure_plate", () -> new BlockItem(BAMBOO_PRESSURE_PLATE.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> BAMBOO_SLAB_ITEM = ItemInit.ITEMS.register("bamboo_slab", () -> new BlockItem(BAMBOO_SLAB.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> BAMBOO_STAIRS_ITEM = ItemInit.ITEMS.register("bamboo_stairs", () -> new BlockItem(BAMBOO_STAIRS.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> BAMBOO_TRAPDOOR_ITEM = ItemInit.ITEMS.register("bamboo_trapdoor", () -> new BlockItem(BAMBOO_TRAPDOOR.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));

    public static final RegistryObject<BlockItem> ACACIA_BEAM_UP_ITEM = ItemInit.ITEMS.register("acacia_beam_up", () -> new BlockItem(ACACIA_BEAM_UP.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> ACACIA_BEAM_MIDDLE_ITEM = ItemInit.ITEMS.register("acacia_beam_middle", () -> new BlockItem(ACACIA_BEAM_MIDDLE.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> ACACIA_BEAM_DOWN_ITEM = ItemInit.ITEMS.register("acacia_beam_down", () -> new BlockItem(ACACIA_BEAM_DOWN.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> BIRCH_BEAM_UP_ITEM = ItemInit.ITEMS.register("birch_beam_up", () -> new BlockItem(BIRCH_BEAM_UP.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> BIRCH_BEAM_MIDDLE_ITEM = ItemInit.ITEMS.register("birch_beam_middle", () -> new BlockItem(BIRCH_BEAM_MIDDLE.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> BIRCH_BEAM_DOWN_ITEM = ItemInit.ITEMS.register("birch_beam_down", () -> new BlockItem(BIRCH_BEAM_DOWN.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> DARK_OAK_BEAM_UP_ITEM = ItemInit.ITEMS.register("dark_oak_beam_up", () -> new BlockItem(DARK_OAK_BEAM_UP.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> DARK_OAK_BEAM_MIDDLE_ITEM = ItemInit.ITEMS.register("dark_oak_beam_middle", () -> new BlockItem(DARK_OAK_BEAM_MIDDLE.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> DARK_OAK_BEAM_DOWN_ITEM = ItemInit.ITEMS.register("dark_oak_beam_down", () -> new BlockItem(DARK_OAK_BEAM_DOWN.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> JUNGLE_BEAM_UP_ITEM = ItemInit.ITEMS.register("jungle_beam_up", () -> new BlockItem(JUNGLE_BEAM_UP.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> JUNGLE_BEAM_MIDDLE_ITEM = ItemInit.ITEMS.register("jungle_beam_middle", () -> new BlockItem(JUNGLE_BEAM_MIDDLE.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> JUNGLE_BEAM_DOWN_ITEM = ItemInit.ITEMS.register("jungle_beam_down", () -> new BlockItem(JUNGLE_BEAM_DOWN.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> OAK_BEAM_UP_ITEM = ItemInit.ITEMS.register("oak_beam_up", () -> new BlockItem(OAK_BEAM_UP.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> OAK_BEAM_MIDDLE_ITEM = ItemInit.ITEMS.register("oak_beam_middle", () -> new BlockItem(OAK_BEAM_MIDDLE.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> OAK_BEAM_DOWN_ITEM = ItemInit.ITEMS.register("oak_beam_down", () -> new BlockItem(OAK_BEAM_DOWN.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> SPRUCE_BEAM_UP_ITEM = ItemInit.ITEMS.register("spruce_beam_up", () -> new BlockItem(SPRUCE_BEAM_UP.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> SPRUCE_BEAM_MIDDLE_ITEM = ItemInit.ITEMS.register("spruce_beam_middle", () -> new BlockItem(SPRUCE_BEAM_MIDDLE.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> SPRUCE_BEAM_DOWN_ITEM = ItemInit.ITEMS.register("spruce_beam_down", () -> new BlockItem(SPRUCE_BEAM_DOWN.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));

    public static final RegistryObject<BlockItem> ACACIA_LADDER_ITEM = ItemInit.ITEMS.register("acacia_ladder", () -> new BlockItem(ACACIA_LADDER.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> BIRCH_LADDER_ITEM = ItemInit.ITEMS.register("birch_ladder", () -> new BlockItem(BIRCH_LADDER.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> DARK_OAK_LADDER_ITEM = ItemInit.ITEMS.register("dark_oak_ladder", () -> new BlockItem(DARK_OAK_LADDER.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> JUNGLE_LADDER_ITEM = ItemInit.ITEMS.register("jungle_ladder", () -> new BlockItem(JUNGLE_LADDER.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> OAK_LADDER_ITEM = ItemInit.ITEMS.register("oak_ladder", () -> new BlockItem(OAK_LADDER.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> SPRUCE_LADDER_ITEM = ItemInit.ITEMS.register("spruce_ladder", () -> new BlockItem(SPRUCE_LADDER.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));

    public static final RegistryObject<BlockItem> MOSSY_STONE_BLOCK_ITEM = ItemInit.ITEMS.register("mossy_stone", () -> new BlockItem(MOSSY_STONE.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> MOSSY_STONE_BUTTON_ITEM = ItemInit.ITEMS.register("mossy_stone_button", () -> new BlockItem(MOSSY_STONE_BUTTON.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> MOSSY_STONE_WALL_ITEM = ItemInit.ITEMS.register("mossy_stone_wall", () -> new BlockItem(MOSSY_STONE_WALL.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> MOSSY_STONE_PRESSURE_PLATE_ITEM = ItemInit.ITEMS.register("mossy_stone_pressure_plate", () -> new BlockItem(MOSSY_STONE_PRESSURE_PLATE.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> MOSSY_STONE_SLAB_ITEM = ItemInit.ITEMS.register("mossy_stone_slab", () -> new BlockItem(MOSSY_STONE_SLAB.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> MOSSY_STONE_STAIRS_ITEM = ItemInit.ITEMS.register("mossy_stone_stairs", () -> new BlockItem(MOSSY_STONE_STAIRS.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));

    public static final RegistryObject<BlockItem> MORE_MOSSY_STONE_BLOCK_ITEM = ItemInit.ITEMS.register("more_mossy_stone", () -> new BlockItem(MORE_MOSSY_STONE.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> MORE_MOSSY_STONE_BUTTON_ITEM = ItemInit.ITEMS.register("more_mossy_stone_button", () -> new BlockItem(MORE_MOSSY_STONE_BUTTON.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> MORE_MOSSY_STONE_WALL_ITEM = ItemInit.ITEMS.register("more_mossy_stone_wall", () -> new BlockItem(MORE_MOSSY_STONE_WALL.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> MORE_MOSSY_STONE_PRESSURE_PLATE_ITEM = ItemInit.ITEMS.register("more_mossy_stone_pressure_plate", () -> new BlockItem(MORE_MOSSY_STONE_PRESSURE_PLATE.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> MORE_MOSSY_STONE_SLAB_ITEM = ItemInit.ITEMS.register("more_mossy_stone_slab", () -> new BlockItem(MORE_MOSSY_STONE_SLAB.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> MORE_MOSSY_STONE_STAIRS_ITEM = ItemInit.ITEMS.register("more_mossy_stone_stairs", () -> new BlockItem(MORE_MOSSY_STONE_STAIRS.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));

    public static final RegistryObject<BlockItem> MOSSY_ANDESITE_BLOCK_ITEM = ItemInit.ITEMS.register("mossy_andesite", () -> new BlockItem(MOSSY_ANDESITE.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> MOSSY_ANDESITE_BUTTON_ITEM = ItemInit.ITEMS.register("mossy_andesite_button", () -> new BlockItem(MOSSY_ANDESITE_BUTTON.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> MOSSY_ANDESITE_WALL_ITEM = ItemInit.ITEMS.register("mossy_andesite_wall", () -> new BlockItem(MOSSY_ANDESITE_WALL.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> MOSSY_ANDESITE_PRESSURE_PLATE_ITEM = ItemInit.ITEMS.register("mossy_andesite_pressure_plate", () -> new BlockItem(MOSSY_ANDESITE_PRESSURE_PLATE.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> MOSSY_ANDESITE_SLAB_ITEM = ItemInit.ITEMS.register("mossy_andesite_slab", () -> new BlockItem(MOSSY_ANDESITE_SLAB.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> MOSSY_ANDESITE_STAIRS_ITEM = ItemInit.ITEMS.register("mossy_andesite_stairs", () -> new BlockItem(MOSSY_ANDESITE_STAIRS.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));

    public static final RegistryObject<BlockItem> MORE_MOSSY_ANDESITE_BLOCK_ITEM = ItemInit.ITEMS.register("more_mossy_andesite", () -> new BlockItem(MORE_MOSSY_ANDESITE.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> MORE_MOSSY_ANDESITE_BUTTON_ITEM = ItemInit.ITEMS.register("more_mossy_andesite_button", () -> new BlockItem(MORE_MOSSY_ANDESITE_BUTTON.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> MORE_MOSSY_ANDESITE_WALL_ITEM = ItemInit.ITEMS.register("more_mossy_andesite_wall", () -> new BlockItem(MORE_MOSSY_ANDESITE_WALL.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> MORE_MOSSY_ANDESITE_PRESSURE_PLATE_ITEM = ItemInit.ITEMS.register("more_mossy_andesite_pressure_plate", () -> new BlockItem(MORE_MOSSY_ANDESITE_PRESSURE_PLATE.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> MORE_MOSSY_ANDESITE_SLAB_ITEM = ItemInit.ITEMS.register("more_mossy_andesite_slab", () -> new BlockItem(MORE_MOSSY_ANDESITE_SLAB.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> MORE_MOSSY_ANDESITE_STAIRS_ITEM = ItemInit.ITEMS.register("more_mossy_andesite_stairs", () -> new BlockItem(MORE_MOSSY_ANDESITE_STAIRS.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));

    public static final RegistryObject<BlockItem> ACACIA_TORCH_ITEM = ItemInit.ITEMS.register("acacia_torch", () -> new WallOrFloorItem(ACACIA_TORCH.get(), ACACIA_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> BIRCH_TORCH_ITEM = ItemInit.ITEMS.register("birch_torch", () -> new WallOrFloorItem(BIRCH_TORCH.get(), BIRCH_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> DARK_OAK_TORCH_ITEM = ItemInit.ITEMS.register("dark_oak_torch", () -> new WallOrFloorItem(DARK_OAK_TORCH.get(), DARK_OAK_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> JUNGLE_TORCH_ITEM = ItemInit.ITEMS.register("jungle_torch", () -> new WallOrFloorItem(JUNGLE_TORCH.get(), JUNGLE_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> OAK_TORCH_ITEM = ItemInit.ITEMS.register("oak_torch", () -> new WallOrFloorItem(OAK_TORCH.get(), OAK_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> SPRUCE_TORCH_ITEM = ItemInit.ITEMS.register("spruce_torch", () -> new WallOrFloorItem(SPRUCE_TORCH.get(), SPRUCE_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));

    public static final RegistryObject<BlockItem> ACACIA_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("acacia_soul_torch", () -> new WallOrFloorItem(ACACIA_SOUL_TORCH.get(), ACACIA_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> BIRCH_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("birch_soul_torch", () -> new WallOrFloorItem(BIRCH_SOUL_TORCH.get(), BIRCH_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> DARK_OAK_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("dark_oak_soul_torch", () -> new WallOrFloorItem(DARK_OAK_SOUL_TORCH.get(), DARK_OAK_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> JUNGLE_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("jungle_soul_torch", () -> new WallOrFloorItem(JUNGLE_SOUL_TORCH.get(), JUNGLE_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> OAK_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("oak_soul_torch", () -> new WallOrFloorItem(OAK_SOUL_TORCH.get(), OAK_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> SPRUCE_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("spruce_soul_torch", () -> new WallOrFloorItem(SPRUCE_SOUL_TORCH.get(), SPRUCE_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));

    public static final RegistryObject<BlockItem> BLACK_LIGHT_TORCH_ITEM = ItemInit.ITEMS.register("black_light_torch", () -> new WallOrFloorItem(BLACK_LIGHT_TORCH.get(), BLACK_LIGHT_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> BLUE_LIGHT_TORCH_ITEM = ItemInit.ITEMS.register("blue_light_torch", () -> new WallOrFloorItem(BLUE_LIGHT_TORCH.get(), BLUE_LIGHT_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> BROWN_LIGHT_TORCH_ITEM = ItemInit.ITEMS.register("brown_light_torch", () -> new WallOrFloorItem(BROWN_LIGHT_TORCH.get(), BROWN_LIGHT_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> CYAN_LIGHT_TORCH_ITEM = ItemInit.ITEMS.register("cyan_light_torch", () -> new WallOrFloorItem(CYAN_LIGHT_TORCH.get(), CYAN_LIGHT_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> GRAY_LIGHT_TORCH_ITEM = ItemInit.ITEMS.register("gray_light_torch", () -> new WallOrFloorItem(GRAY_LIGHT_TORCH.get(), GRAY_LIGHT_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> GREEN_LIGHT_TORCH_ITEM = ItemInit.ITEMS.register("green_light_torch", () -> new WallOrFloorItem(GREEN_LIGHT_TORCH.get(), GREEN_LIGHT_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> LIGHT_BLUE_LIGHT_TORCH_ITEM = ItemInit.ITEMS.register("light_blue_light_torch", () -> new WallOrFloorItem(LIGHT_BLUE_LIGHT_TORCH.get(), LIGHT_BLUE_LIGHT_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> LIGHT_GRAY_LIGHT_TORCH_ITEM = ItemInit.ITEMS.register("light_gray_light_torch", () -> new WallOrFloorItem(LIGHT_GRAY_LIGHT_TORCH.get(), LIGHT_GRAY_LIGHT_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> LIME_LIGHT_TORCH_ITEM = ItemInit.ITEMS.register("lime_light_torch", () -> new WallOrFloorItem(LIME_LIGHT_TORCH.get(), LIME_LIGHT_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> MAGENTA_LIGHT_TORCH_ITEM = ItemInit.ITEMS.register("magenta_light_torch", () -> new WallOrFloorItem(MAGENTA_LIGHT_TORCH.get(), MAGENTA_LIGHT_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> ORANGE_LIGHT_TORCH_ITEM = ItemInit.ITEMS.register("orange_light_torch", () -> new WallOrFloorItem(ORANGE_LIGHT_TORCH.get(), ORANGE_LIGHT_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> PINK_LIGHT_TORCH_ITEM = ItemInit.ITEMS.register("pink_light_torch", () -> new WallOrFloorItem(PINK_LIGHT_TORCH.get(), PINK_LIGHT_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> PURPLE_LIGHT_TORCH_ITEM = ItemInit.ITEMS.register("purple_light_torch", () -> new WallOrFloorItem(PURPLE_LIGHT_TORCH.get(), PURPLE_LIGHT_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> RED_LIGHT_TORCH_ITEM = ItemInit.ITEMS.register("red_light_torch", () -> new WallOrFloorItem(RED_LIGHT_TORCH.get(), RED_LIGHT_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> WHITE_LIGHT_TORCH_ITEM = ItemInit.ITEMS.register("white_light_torch", () -> new WallOrFloorItem(WHITE_LIGHT_TORCH.get(), WHITE_LIGHT_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> YELLOW_LIGHT_TORCH_ITEM = ItemInit.ITEMS.register("yellow_light_torch", () -> new WallOrFloorItem(YELLOW_LIGHT_TORCH.get(), YELLOW_LIGHT_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> BLACK_MEDIUM_TORCH_ITEM = ItemInit.ITEMS.register("black_medium_torch", () -> new WallOrFloorItem(BLACK_MEDIUM_TORCH.get(), BLACK_MEDIUM_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> BLUE_MEDIUM_TORCH_ITEM = ItemInit.ITEMS.register("blue_medium_torch", () -> new WallOrFloorItem(BLUE_MEDIUM_TORCH.get(), BLUE_MEDIUM_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> BROWN_MEDIUM_TORCH_ITEM = ItemInit.ITEMS.register("brown_medium_torch", () -> new WallOrFloorItem(BROWN_MEDIUM_TORCH.get(), BROWN_MEDIUM_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> CYAN_MEDIUM_TORCH_ITEM = ItemInit.ITEMS.register("cyan_medium_torch", () -> new WallOrFloorItem(CYAN_MEDIUM_TORCH.get(), CYAN_MEDIUM_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> GRAY_MEDIUM_TORCH_ITEM = ItemInit.ITEMS.register("gray_medium_torch", () -> new WallOrFloorItem(GRAY_MEDIUM_TORCH.get(), GRAY_MEDIUM_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> GREEN_MEDIUM_TORCH_ITEM = ItemInit.ITEMS.register("green_medium_torch", () -> new WallOrFloorItem(GREEN_MEDIUM_TORCH.get(), GREEN_MEDIUM_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> LIGHT_BLUE_MEDIUM_TORCH_ITEM = ItemInit.ITEMS.register("light_blue_medium_torch", () -> new WallOrFloorItem(LIGHT_BLUE_MEDIUM_TORCH.get(), LIGHT_BLUE_MEDIUM_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> LIGHT_GRAY_MEDIUM_TORCH_ITEM = ItemInit.ITEMS.register("light_gray_medium_torch", () -> new WallOrFloorItem(LIGHT_GRAY_MEDIUM_TORCH.get(), LIGHT_GRAY_MEDIUM_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> LIME_MEDIUM_TORCH_ITEM = ItemInit.ITEMS.register("lime_medium_torch", () -> new WallOrFloorItem(LIME_MEDIUM_TORCH.get(), LIME_MEDIUM_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> MAGENTA_MEDIUM_TORCH_ITEM = ItemInit.ITEMS.register("magenta_medium_torch", () -> new WallOrFloorItem(MAGENTA_MEDIUM_TORCH.get(), MAGENTA_MEDIUM_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> ORANGE_MEDIUM_TORCH_ITEM = ItemInit.ITEMS.register("orange_medium_torch", () -> new WallOrFloorItem(ORANGE_MEDIUM_TORCH.get(), ORANGE_MEDIUM_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> PINK_MEDIUM_TORCH_ITEM = ItemInit.ITEMS.register("pink_medium_torch", () -> new WallOrFloorItem(PINK_MEDIUM_TORCH.get(), PINK_MEDIUM_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> PURPLE_MEDIUM_TORCH_ITEM = ItemInit.ITEMS.register("purple_medium_torch", () -> new WallOrFloorItem(PURPLE_MEDIUM_TORCH.get(), PURPLE_MEDIUM_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> RED_MEDIUM_TORCH_ITEM = ItemInit.ITEMS.register("red_medium_torch", () -> new WallOrFloorItem(RED_MEDIUM_TORCH.get(), RED_MEDIUM_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> WHITE_MEDIUM_TORCH_ITEM = ItemInit.ITEMS.register("white_medium_torch", () -> new WallOrFloorItem(WHITE_MEDIUM_TORCH.get(), WHITE_MEDIUM_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> YELLOW_MEDIUM_TORCH_ITEM = ItemInit.ITEMS.register("yellow_medium_torch", () -> new WallOrFloorItem(YELLOW_MEDIUM_TORCH.get(), YELLOW_MEDIUM_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> BLACK_DARK_TORCH_ITEM = ItemInit.ITEMS.register("black_dark_torch", () -> new WallOrFloorItem(BLACK_DARK_TORCH.get(), BLACK_DARK_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> BLUE_DARK_TORCH_ITEM = ItemInit.ITEMS.register("blue_dark_torch", () -> new WallOrFloorItem(BLUE_DARK_TORCH.get(), BLUE_DARK_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> BROWN_DARK_TORCH_ITEM = ItemInit.ITEMS.register("brown_dark_torch", () -> new WallOrFloorItem(BROWN_DARK_TORCH.get(), BROWN_DARK_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> CYAN_DARK_TORCH_ITEM = ItemInit.ITEMS.register("cyan_dark_torch", () -> new WallOrFloorItem(CYAN_DARK_TORCH.get(), CYAN_DARK_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> GRAY_DARK_TORCH_ITEM = ItemInit.ITEMS.register("gray_dark_torch", () -> new WallOrFloorItem(GRAY_DARK_TORCH.get(), GRAY_DARK_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> GREEN_DARK_TORCH_ITEM = ItemInit.ITEMS.register("green_dark_torch", () -> new WallOrFloorItem(GREEN_DARK_TORCH.get(), GREEN_DARK_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> LIGHT_BLUE_DARK_TORCH_ITEM = ItemInit.ITEMS.register("light_blue_dark_torch", () -> new WallOrFloorItem(LIGHT_BLUE_DARK_TORCH.get(), LIGHT_BLUE_DARK_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> LIGHT_GRAY_DARK_TORCH_ITEM = ItemInit.ITEMS.register("light_gray_dark_torch", () -> new WallOrFloorItem(LIGHT_GRAY_DARK_TORCH.get(), LIGHT_GRAY_DARK_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> LIME_DARK_TORCH_ITEM = ItemInit.ITEMS.register("lime_dark_torch", () -> new WallOrFloorItem(LIME_DARK_TORCH.get(), LIME_DARK_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> MAGENTA_DARK_TORCH_ITEM = ItemInit.ITEMS.register("magenta_dark_torch", () -> new WallOrFloorItem(MAGENTA_DARK_TORCH.get(), MAGENTA_DARK_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> ORANGE_DARK_TORCH_ITEM = ItemInit.ITEMS.register("orange_dark_torch", () -> new WallOrFloorItem(ORANGE_DARK_TORCH.get(), ORANGE_DARK_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> PINK_DARK_TORCH_ITEM = ItemInit.ITEMS.register("pink_dark_torch", () -> new WallOrFloorItem(PINK_DARK_TORCH.get(), PINK_DARK_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> PURPLE_DARK_TORCH_ITEM = ItemInit.ITEMS.register("purple_dark_torch", () -> new WallOrFloorItem(PURPLE_DARK_TORCH.get(), PURPLE_DARK_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> RED_DARK_TORCH_ITEM = ItemInit.ITEMS.register("red_dark_torch", () -> new WallOrFloorItem(RED_DARK_TORCH.get(), RED_DARK_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> WHITE_DARK_TORCH_ITEM = ItemInit.ITEMS.register("white_dark_torch", () -> new WallOrFloorItem(WHITE_DARK_TORCH.get(), WHITE_DARK_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> YELLOW_DARK_TORCH_ITEM = ItemInit.ITEMS.register("yellow_dark_torch", () -> new WallOrFloorItem(YELLOW_DARK_TORCH.get(), YELLOW_DARK_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> BLACK_LIGHT_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("black_light_soul_torch", () -> new WallOrFloorItem(BLACK_LIGHT_SOUL_TORCH.get(), BLACK_LIGHT_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> BLUE_LIGHT_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("blue_light_soul_torch", () -> new WallOrFloorItem(BLUE_LIGHT_SOUL_TORCH.get(), BLUE_LIGHT_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> BROWN_LIGHT_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("brown_light_soul_torch", () -> new WallOrFloorItem(BROWN_LIGHT_SOUL_TORCH.get(), BROWN_LIGHT_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> CYAN_LIGHT_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("cyan_light_soul_torch", () -> new WallOrFloorItem(CYAN_LIGHT_SOUL_TORCH.get(), CYAN_LIGHT_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> GRAY_LIGHT_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("gray_light_soul_torch", () -> new WallOrFloorItem(GRAY_LIGHT_SOUL_TORCH.get(), GRAY_LIGHT_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> GREEN_LIGHT_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("green_light_soul_torch", () -> new WallOrFloorItem(GREEN_LIGHT_SOUL_TORCH.get(), GREEN_LIGHT_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> LIGHT_BLUE_LIGHT_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("light_blue_light_soul_torch", () -> new WallOrFloorItem(LIGHT_BLUE_LIGHT_SOUL_TORCH.get(), LIGHT_BLUE_LIGHT_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> LIGHT_GRAY_LIGHT_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("light_gray_light_soul_torch", () -> new WallOrFloorItem(LIGHT_GRAY_LIGHT_SOUL_TORCH.get(), LIGHT_GRAY_LIGHT_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> LIME_LIGHT_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("lime_light_soul_torch", () -> new WallOrFloorItem(LIME_LIGHT_SOUL_TORCH.get(), LIME_LIGHT_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> MAGENTA_LIGHT_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("magenta_light_soul_torch", () -> new WallOrFloorItem(MAGENTA_LIGHT_SOUL_TORCH.get(), MAGENTA_LIGHT_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> ORANGE_LIGHT_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("orange_light_soul_torch", () -> new WallOrFloorItem(ORANGE_LIGHT_SOUL_TORCH.get(), ORANGE_LIGHT_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> PINK_LIGHT_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("pink_light_soul_torch", () -> new WallOrFloorItem(PINK_LIGHT_SOUL_TORCH.get(), PINK_LIGHT_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> PURPLE_LIGHT_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("purple_light_soul_torch", () -> new WallOrFloorItem(PURPLE_LIGHT_SOUL_TORCH.get(), PURPLE_LIGHT_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> RED_LIGHT_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("red_light_soul_torch", () -> new WallOrFloorItem(RED_LIGHT_SOUL_TORCH.get(), RED_LIGHT_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> WHITE_LIGHT_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("white_light_soul_torch", () -> new WallOrFloorItem(WHITE_LIGHT_SOUL_TORCH.get(), WHITE_LIGHT_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> YELLOW_LIGHT_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("yellow_light_soul_torch", () -> new WallOrFloorItem(YELLOW_LIGHT_SOUL_TORCH.get(), YELLOW_LIGHT_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> BLACK_MEDIUM_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("black_medium_soul_torch", () -> new WallOrFloorItem(BLACK_MEDIUM_SOUL_TORCH.get(), BLACK_MEDIUM_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> BLUE_MEDIUM_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("blue_medium_soul_torch", () -> new WallOrFloorItem(BLUE_MEDIUM_SOUL_TORCH.get(), BLUE_MEDIUM_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> BROWN_MEDIUM_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("brown_medium_soul_torch", () -> new WallOrFloorItem(BROWN_MEDIUM_SOUL_TORCH.get(), BROWN_MEDIUM_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> CYAN_MEDIUM_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("cyan_medium_soul_torch", () -> new WallOrFloorItem(CYAN_MEDIUM_SOUL_TORCH.get(), CYAN_MEDIUM_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> GRAY_MEDIUM_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("gray_medium_soul_torch", () -> new WallOrFloorItem(GRAY_MEDIUM_SOUL_TORCH.get(), GRAY_MEDIUM_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> GREEN_MEDIUM_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("green_medium_soul_torch", () -> new WallOrFloorItem(GREEN_MEDIUM_SOUL_TORCH.get(), GREEN_MEDIUM_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> LIGHT_BLUE_MEDIUM_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("light_blue_medium_soul_torch", () -> new WallOrFloorItem(LIGHT_BLUE_MEDIUM_SOUL_TORCH.get(), LIGHT_BLUE_MEDIUM_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> LIGHT_GRAY_MEDIUM_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("light_gray_medium_soul_torch", () -> new WallOrFloorItem(LIGHT_GRAY_MEDIUM_SOUL_TORCH.get(), LIGHT_GRAY_MEDIUM_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> LIME_MEDIUM_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("lime_medium_soul_torch", () -> new WallOrFloorItem(LIME_MEDIUM_SOUL_TORCH.get(), LIME_MEDIUM_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> MAGENTA_MEDIUM_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("magenta_medium_soul_torch", () -> new WallOrFloorItem(MAGENTA_MEDIUM_SOUL_TORCH.get(), MAGENTA_MEDIUM_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> ORANGE_MEDIUM_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("orange_medium_soul_torch", () -> new WallOrFloorItem(ORANGE_MEDIUM_SOUL_TORCH.get(), ORANGE_MEDIUM_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> PINK_MEDIUM_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("pink_medium_soul_torch", () -> new WallOrFloorItem(PINK_MEDIUM_SOUL_TORCH.get(), PINK_MEDIUM_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> PURPLE_MEDIUM_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("purple_medium_soul_torch", () -> new WallOrFloorItem(PURPLE_MEDIUM_SOUL_TORCH.get(), PURPLE_MEDIUM_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> RED_MEDIUM_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("red_medium_soul_torch", () -> new WallOrFloorItem(RED_MEDIUM_SOUL_TORCH.get(), RED_MEDIUM_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> WHITE_MEDIUM_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("white_medium_soul_torch", () -> new WallOrFloorItem(WHITE_MEDIUM_SOUL_TORCH.get(), WHITE_MEDIUM_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> YELLOW_MEDIUM_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("yellow_medium_soul_torch", () -> new WallOrFloorItem(YELLOW_MEDIUM_SOUL_TORCH.get(), YELLOW_MEDIUM_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> BLACK_DARK_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("black_dark_soul_torch", () -> new WallOrFloorItem(BLACK_DARK_SOUL_TORCH.get(), BLACK_DARK_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> BLUE_DARK_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("blue_dark_soul_torch", () -> new WallOrFloorItem(BLUE_DARK_SOUL_TORCH.get(), BLUE_DARK_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> BROWN_DARK_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("brown_dark_soul_torch", () -> new WallOrFloorItem(BROWN_DARK_SOUL_TORCH.get(), BROWN_DARK_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> CYAN_DARK_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("cyan_dark_soul_torch", () -> new WallOrFloorItem(CYAN_DARK_SOUL_TORCH.get(), CYAN_DARK_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> GRAY_DARK_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("gray_dark_soul_torch", () -> new WallOrFloorItem(GRAY_DARK_SOUL_TORCH.get(), GRAY_DARK_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> GREEN_DARK_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("green_dark_soul_torch", () -> new WallOrFloorItem(GREEN_DARK_SOUL_TORCH.get(), GREEN_DARK_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> LIGHT_BLUE_DARK_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("light_blue_dark_soul_torch", () -> new WallOrFloorItem(LIGHT_BLUE_DARK_SOUL_TORCH.get(), LIGHT_BLUE_DARK_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> LIGHT_GRAY_DARK_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("light_gray_dark_soul_torch", () -> new WallOrFloorItem(LIGHT_GRAY_DARK_SOUL_TORCH.get(), LIGHT_GRAY_DARK_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> LIME_DARK_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("lime_dark_soul_torch", () -> new WallOrFloorItem(LIME_DARK_SOUL_TORCH.get(), LIME_DARK_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> MAGENTA_DARK_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("magenta_dark_soul_torch", () -> new WallOrFloorItem(MAGENTA_DARK_SOUL_TORCH.get(), MAGENTA_DARK_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> ORANGE_DARK_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("orange_dark_soul_torch", () -> new WallOrFloorItem(ORANGE_DARK_SOUL_TORCH.get(), ORANGE_DARK_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> PINK_DARK_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("pink_dark_soul_torch", () -> new WallOrFloorItem(PINK_DARK_SOUL_TORCH.get(), PINK_DARK_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> PURPLE_DARK_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("purple_dark_soul_torch", () -> new WallOrFloorItem(PURPLE_DARK_SOUL_TORCH.get(), PURPLE_DARK_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> RED_DARK_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("red_dark_soul_torch", () -> new WallOrFloorItem(RED_DARK_SOUL_TORCH.get(), RED_DARK_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> WHITE_DARK_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("white_dark_soul_torch", () -> new WallOrFloorItem(WHITE_DARK_SOUL_TORCH.get(), WHITE_DARK_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));
    public static final RegistryObject<BlockItem> YELLOW_DARK_SOUL_TORCH_ITEM = ItemInit.ITEMS.register("yellow_dark_soul_torch", () -> new WallOrFloorItem(YELLOW_DARK_SOUL_TORCH.get(), YELLOW_DARK_SOUL_WALL_TORCH.get(), new Item.Properties().tab(SilverwolfsBuildingBlocks.TAB)));

    //lists
    public static ArrayList<RegistryObject<Block>> LIGHT_BRICKS = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> MEDIUM_BRICKS = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> DARK_BRICKS = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> LIGHT_BRICK_BUTTON = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> MEDIUM_BRICK_BUTTON = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> DARK_BRICK_BUTTON = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> LIGHT_BRICK_WALL = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> MEDIUM_BRICK_WALL = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> DARK_BRICK_WALL = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> LIGHT_BRICK_SLAB = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> MEDIUM_BRICK_SLAB = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> DARK_BRICK_SLAB = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> LIGHT_BRICK_STAIRS = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> MEDIUM_BRICK_STAIRS = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> DARK_BRICK_STAIRS = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> LIGHT_BRICK_PRESSURE_PLATE = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> MEDIUM_BRICK_PRESSURE_PLATE = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> DARK_BRICK_PRESSURE_PLATE = new ArrayList<>();

    public static ArrayList<RegistryObject<Block>> LIGHT_STONE_BRICKS = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> MEDIUM_STONE_BRICKS = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> DARK_STONE_BRICKS = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> LIGHT_STONE_BRICK_BUTTON = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> MEDIUM_STONE_BRICK_BUTTON = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> DARK_STONE_BRICK_BUTTON = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> LIGHT_STONE_BRICK_WALL = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> MEDIUM_STONE_BRICK_WALL = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> DARK_STONE_BRICK_WALL = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> LIGHT_STONE_BRICK_SLAB = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> MEDIUM_STONE_BRICK_SLAB = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> DARK_STONE_BRICK_SLAB = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> LIGHT_STONE_BRICK_STAIRS = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> MEDIUM_STONE_BRICK_STAIRS = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> DARK_STONE_BRICK_STAIRS = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> LIGHT_STONE_BRICK_PRESSURE_PLATE = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> MEDIUM_STONE_BRICK_PRESSURE_PLATE = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> DARK_STONE_BRICK_PRESSURE_PLATE = new ArrayList<>();

    public static ArrayList<RegistryObject<Block>> LIGHT_CLAY_BLOCKS = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> MEDIUM_CLAY_BLOCKS = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> DARK_CLAY_BLOCKS = new ArrayList<>();

    public static ArrayList<RegistryObject<Block>> WOOL_SLAB = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> WOOL_STAIRS = new ArrayList<>();

    public static ArrayList<RegistryObject<Block>> LIGHT_LOGS = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> MEDIUM_LOGS = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> DARK_LOGS = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> LIGHT_PLANKS = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> MEDIUM_PLANKS = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> DARK_PLANKS = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> LIGHT_PLANK_STAIRS = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> MEDIUM_PLANK_STAIRS = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> DARK_PLANK_STAIRS = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> LIGHT_PLANK_SLABS = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> MEDIUM_PLANK_SLABS = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> DARK_PLANK_SLABS = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> LIGHT_PLANK_BUTTON = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> MEDIUM_PLANK_BUTTON = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> DARK_PLANK_BUTTON = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> LIGHT_PLANK_DOOR = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> MEDIUM_PLANK_DOOR = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> DARK_PLANK_DOOR = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> LIGHT_PLANK_FENCE = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> MEDIUM_PLANK_FENCE = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> DARK_PLANK_FENCE = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> LIGHT_PLANK_PRESSURE_PLATE = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> MEDIUM_PLANK_PRESSURE_PLATE = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> DARK_PLANK_PRESSURE_PLATE = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> LIGHT_PLANK_FENCE_GATE = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> MEDIUM_PLANK_FENCE_GATE = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> DARK_PLANK_FENCE_GATE = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> LIGHT_PLANK_LADDER = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> MEDIUM_PLANK_LADDER = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> DARK_PLANK_LADDER = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> LIGHT_PLANK_TRAPDOOR = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> MEDIUM_PLANK_TRAPDOOR = new ArrayList<>();
    public static ArrayList<RegistryObject<Block>> DARK_PLANK_TRAPDOOR = new ArrayList<>();

    static {
        for (DyeColor color : DyeColor.values()) {

            LIGHT_BRICKS.add(register(color.getName() + "_light_bricks", () -> new Block(AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(2.0F, 6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops())));
            MEDIUM_BRICKS.add(register(color.getName() + "_medium_bricks", () -> new Block(AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(2.0F, 6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops())));
            DARK_BRICKS.add(register(color.getName() + "_dark_bricks", () -> new Block(AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(2.0F, 6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops())));
            LIGHT_BRICK_BUTTON.add(register(color.getName() + "_light_brick_button", () -> new ModStoneButtonBlock(AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(2.0F, 6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops())));
            MEDIUM_BRICK_BUTTON.add(register(color.getName() + "_medium_brick_button", () -> new ModStoneButtonBlock(AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(2.0F, 6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops())));
            DARK_BRICK_BUTTON.add(register(color.getName() + "_dark_brick_button", () -> new ModStoneButtonBlock(AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(2.0F, 6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops())));
            LIGHT_BRICK_WALL.add(register(color.getName() + "_light_brick_wall", () -> new WallBlock(AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(2.0F, 6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops())));
            MEDIUM_BRICK_WALL.add(register(color.getName() + "_medium_brick_wall", () -> new WallBlock(AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(2.0F, 6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops())));
            DARK_BRICK_WALL.add(register(color.getName() + "_dark_brick_wall", () -> new WallBlock(AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(2.0F, 6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops())));
            LIGHT_BRICK_SLAB.add(register(color.getName() + "_light_brick_slab", () -> new SlabBlock(AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(2.0F, 6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops())));
            MEDIUM_BRICK_SLAB.add(register(color.getName() + "_medium_brick_slab", () -> new SlabBlock(AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(2.0F, 6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops())));
            DARK_BRICK_SLAB.add(register(color.getName() + "_dark_brick_slab", () -> new SlabBlock(AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(2.0F, 6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops())));
            LIGHT_BRICK_STAIRS.add(register(color.getName() + "_light_brick_stairs", () -> new StairsBlock(Blocks.BRICKS.defaultBlockState(), AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(2.0F, 6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops())));
            MEDIUM_BRICK_STAIRS.add(register(color.getName() + "_medium_brick_stairs", () -> new StairsBlock(Blocks.BRICKS.defaultBlockState(), AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(2.0F, 6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops())));
            DARK_BRICK_STAIRS.add(register(color.getName() + "_dark_brick_stairs", () -> new StairsBlock(Blocks.BRICKS.defaultBlockState(), AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(2.0F, 6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops())));
            LIGHT_BRICK_PRESSURE_PLATE.add(register(color.getName() + "_light_brick_pressure_plate", () -> new ModPressurePlateBlock(PressurePlateBlock.Sensitivity.MOBS, AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(2.0F, 6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops())));
            MEDIUM_BRICK_PRESSURE_PLATE.add(register(color.getName() + "_medium_brick_pressure_plate", () -> new ModPressurePlateBlock(PressurePlateBlock.Sensitivity.MOBS, AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(2.0F, 6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops())));
            DARK_BRICK_PRESSURE_PLATE.add(register(color.getName() + "_dark_brick_pressure_plate", () -> new ModPressurePlateBlock(PressurePlateBlock.Sensitivity.MOBS, AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(2.0F, 6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops())));

            LIGHT_STONE_BRICKS.add(register(color.getName() + "_light_stone_bricks", () -> new Block(AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(2.0F, 6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops())));
            MEDIUM_STONE_BRICKS.add(register(color.getName() + "_medium_stone_bricks", () -> new Block(AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(2.0F, 6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops())));
            DARK_STONE_BRICKS.add(register(color.getName() + "_dark_stone_bricks", () -> new Block(AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(2.0F, 6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops())));
            LIGHT_STONE_BRICK_BUTTON.add(register(color.getName() + "_light_stone_brick_button", () -> new ModStoneButtonBlock(AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(2.0F, 6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops())));
            MEDIUM_STONE_BRICK_BUTTON.add(register(color.getName() + "_medium_stone_brick_button", () -> new ModStoneButtonBlock(AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(2.0F, 6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops())));
            DARK_STONE_BRICK_BUTTON.add(register(color.getName() + "_dark_stone_brick_button", () -> new ModStoneButtonBlock(AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(2.0F, 6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops())));
            LIGHT_STONE_BRICK_WALL.add(register(color.getName() + "_light_stone_brick_wall", () -> new WallBlock(AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(2.0F, 6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops())));
            MEDIUM_STONE_BRICK_WALL.add(register(color.getName() + "_medium_stone_brick_wall", () -> new WallBlock(AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(2.0F, 6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops())));
            DARK_STONE_BRICK_WALL.add(register(color.getName() + "_dark_stone_brick_wall", () -> new WallBlock(AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(2.0F, 6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops())));
            LIGHT_STONE_BRICK_SLAB.add(register(color.getName() + "_light_stone_brick_slab", () -> new SlabBlock(AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(2.0F, 6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops())));
            MEDIUM_STONE_BRICK_SLAB.add(register(color.getName() + "_medium_stone_brick_slab", () -> new SlabBlock(AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(2.0F, 6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops())));
            DARK_STONE_BRICK_SLAB.add(register(color.getName() + "_dark_stone_brick_slab", () -> new SlabBlock(AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(2.0F, 6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops())));
            LIGHT_STONE_BRICK_STAIRS.add(register(color.getName() + "_light_stone_brick_stairs", () -> new StairsBlock(Blocks.STONE_BRICKS.defaultBlockState(), AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(2.0F, 6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops())));
            MEDIUM_STONE_BRICK_STAIRS.add(register(color.getName() + "_medium_stone_brick_stairs", () -> new StairsBlock(Blocks.STONE_BRICKS.defaultBlockState(), AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(2.0F, 6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops())));
            DARK_STONE_BRICK_STAIRS.add(register(color.getName() + "_dark_stone_brick_stairs", () -> new StairsBlock(Blocks.STONE_BRICKS.defaultBlockState(), AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(2.0F, 6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops())));
            LIGHT_STONE_BRICK_PRESSURE_PLATE.add(register(color.getName() + "_light_stone_brick_pressure_plate", () -> new ModPressurePlateBlock(PressurePlateBlock.Sensitivity.MOBS, AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(2.0F, 6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops())));
            MEDIUM_STONE_BRICK_PRESSURE_PLATE.add(register(color.getName() + "_medium_stone_brick_pressure_plate", () -> new ModPressurePlateBlock(PressurePlateBlock.Sensitivity.MOBS, AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(2.0F, 6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops())));
            DARK_STONE_BRICK_PRESSURE_PLATE.add(register(color.getName() + "_dark_stone_brick_pressure_plate", () -> new ModPressurePlateBlock(PressurePlateBlock.Sensitivity.MOBS, AbstractBlock.Properties.of(Material.STONE).sound(SoundType.STONE).strength(2.0F, 6.0F).harvestTool(ToolType.PICKAXE).harvestLevel(0).requiresCorrectToolForDrops())));

            LIGHT_CLAY_BLOCKS.add(register(color.getName() + "_light_clay_block", () -> new Block(AbstractBlock.Properties.of(Material.CLAY).sound(SoundType.GRAVEL).strength(0.6F, 0.6F).harvestTool(ToolType.SHOVEL).harvestLevel(0))));
            MEDIUM_CLAY_BLOCKS.add(register(color.getName() + "_medium_clay_block", () -> new Block(AbstractBlock.Properties.of(Material.CLAY).sound(SoundType.GRAVEL).strength(0.6F, 0.6F).harvestTool(ToolType.SHOVEL).harvestLevel(0))));
            DARK_CLAY_BLOCKS.add(register(color.getName() + "_dark_clay_block", () -> new Block(AbstractBlock.Properties.of(Material.CLAY).sound(SoundType.GRAVEL).strength(0.6F, 0.6F).harvestTool(ToolType.SHOVEL).harvestLevel(0))));

            WOOL_SLAB.add(register(color.getName() + "_wool_slab", () -> new SlabBlock(AbstractBlock.Properties.of(Material.WOOL).sound(SoundType.WOOL).strength(0.8F, 0.8F))));
            WOOL_STAIRS.add(register(color.getName() + "_wool_stairs", () -> new StairsBlock(Blocks.BLACK_WOOL.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOL).sound(SoundType.WOOL).strength(0.8F, 0.8F))));

            LIGHT_LOGS.add(register(color.getName() + "_light_log", () -> new RotatedPillarBlock(AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE))));
            MEDIUM_LOGS.add(register(color.getName() + "_medium_log", () -> new RotatedPillarBlock(AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE))));
            DARK_LOGS.add(register(color.getName() + "_dark_log", () -> new RotatedPillarBlock(AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE))));
            LIGHT_PLANKS.add(register(color.getName() + "_light_planks", () -> new RotatedPillarBlock(AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE))));
            MEDIUM_PLANKS.add(register(color.getName() + "_medium_planks", () -> new RotatedPillarBlock(AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE))));
            DARK_PLANKS.add(register(color.getName() + "_dark_planks", () -> new RotatedPillarBlock(AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE))));
            LIGHT_PLANK_STAIRS.add(register(color.getName() + "_light_plank_stairs", () -> new StairsBlock(Blocks.OAK_WOOD.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE))));
            MEDIUM_PLANK_STAIRS.add(register(color.getName() + "_medium_plank_stairs", () -> new StairsBlock(Blocks.OAK_WOOD.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE))));
            DARK_PLANK_STAIRS.add(register(color.getName() + "_dark_plank_stairs", () -> new StairsBlock(Blocks.OAK_WOOD.defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE))));
            LIGHT_PLANK_SLABS.add(register(color.getName() + "_light_plank_slab", () -> new SlabBlock(AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE))));
            MEDIUM_PLANK_SLABS.add(register(color.getName() + "_medium_plank_slab", () -> new SlabBlock(AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE))));
            DARK_PLANK_SLABS.add(register(color.getName() + "_dark_plank_slab", () -> new SlabBlock(AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE))));
            LIGHT_PLANK_TRAPDOOR.add(register(color.getName() + "_light_plank_trapdoor", () -> new TrapDoorBlock(AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE).noOcclusion())));
            MEDIUM_PLANK_TRAPDOOR.add(register(color.getName() + "_medium_plank_trapdoor", () -> new TrapDoorBlock(AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE).noOcclusion())));
            DARK_PLANK_TRAPDOOR.add(register(color.getName() + "_dark_plank_trapdoor", () -> new TrapDoorBlock(AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE).noOcclusion())));
            LIGHT_PLANK_DOOR.add(register(color.getName() + "_light_plank_door", () -> new ModDoors(AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE).noOcclusion())));
            MEDIUM_PLANK_DOOR.add(register(color.getName() + "_medium_plank_door", () -> new ModDoors(AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE).noOcclusion())));
            DARK_PLANK_DOOR.add(register(color.getName() + "_dark_plank_door", () -> new ModDoors(AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE).noOcclusion())));
            LIGHT_PLANK_FENCE.add(register(color.getName() + "_light_plank_fence", () -> new FenceBlock(AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE))));
            MEDIUM_PLANK_FENCE.add(register(color.getName() + "_medium_plank_fence", () -> new FenceBlock(AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE))));
            DARK_PLANK_FENCE.add(register(color.getName() + "_dark_plank_fence", () -> new FenceBlock(AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE))));
            LIGHT_PLANK_FENCE_GATE.add(register(color.getName() + "_light_plank_fence_gate", () -> new FenceGateBlock(AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE))));
            MEDIUM_PLANK_FENCE_GATE.add(register(color.getName() + "_medium_plank_fence_gate", () -> new FenceGateBlock(AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE))));
            DARK_PLANK_FENCE_GATE.add(register(color.getName() + "_dark_plank_fence_gate", () -> new FenceGateBlock(AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE))));
            LIGHT_PLANK_BUTTON.add(register(color.getName() + "_light_plank_button", () -> new ModWoodButtonBlock(AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE))));
            MEDIUM_PLANK_BUTTON.add(register(color.getName() + "_medium_plank_button", () -> new ModWoodButtonBlock(AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE))));
            DARK_PLANK_BUTTON.add(register(color.getName() + "_dark_plank_button", () -> new ModWoodButtonBlock(AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE))));
            LIGHT_PLANK_PRESSURE_PLATE.add(register(color.getName() + "_light_plank_pressure_plate", () -> new ModPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE))));
            MEDIUM_PLANK_PRESSURE_PLATE.add(register(color.getName() + "_medium_plank_pressure_plate", () -> new ModPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE))));
            DARK_PLANK_PRESSURE_PLATE.add(register(color.getName() + "_dark_plank_pressure_plate", () -> new ModPressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).strength(2.0F, 3.0F).harvestTool(ToolType.AXE))));
            LIGHT_PLANK_LADDER.add(register(color.getName() + "_light_plank_ladder", () -> new ModLadderBlock(AbstractBlock.Properties.copy(Blocks.LADDER).harvestTool(ToolType.AXE))));
            MEDIUM_PLANK_LADDER.add(register(color.getName() + "_medium_plank_ladder", () -> new ModLadderBlock(AbstractBlock.Properties.copy(Blocks.LADDER).harvestTool(ToolType.AXE))));
            DARK_PLANK_LADDER.add(register(color.getName() + "_dark_plank_ladder", () -> new ModLadderBlock(AbstractBlock.Properties.copy(Blocks.LADDER).harvestTool(ToolType.AXE))));

        }
    }
}
